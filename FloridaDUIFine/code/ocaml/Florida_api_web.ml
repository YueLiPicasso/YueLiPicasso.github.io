(** This file has been generated by the Catala compiler, do not edit! *)

open Runtime_ocaml.Runtime
open Runtime_jsoo.Runtime
open Js_of_ocaml
open Florida

[@@@ocaml.warning "-4-26-27-32-41-42"]

(* Generated API *)

class type date_opt =
  object
    method kind :
      Js.js_string Js.t Js.readonly_prop
      (** Expects one of:
        - "Date"
        - "Not_Applicable" *)
    
    method payload : Js.Unsafe.any Js.t Js.readonly_prop
  end

let date_opt_to_jsoo : DateOpt.t -> date_opt Js.t
  = function
  | Date arg -> object%js
      val kind = Js.string "Date"
      val payload = Js.Unsafe.coerce (Js.Unsafe.inject (date_to_jsoo arg))
    end
  | Not_Applicable arg -> object%js
      val kind = Js.string "Not_Applicable"
      val payload = Js.Unsafe.coerce (Js.Unsafe.inject ( arg))
    end

let date_opt_of_jsoo (date_opt : date_opt Js.t) : DateOpt.t =
  match date_opt##.kind |> Js.to_string with
  | "Date" ->
  DateOpt.Date (date_of_jsoo (Js.Unsafe.coerce date_opt##.payload))
  | "Not_Applicable" -> DateOpt.Not_Applicable ()
  | cons ->
    failwith
      (Printf.sprintf "Unexpected '%s' kind for the enumeration 'DateOpt.t'"
        cons)


class type decimal_opt =
  object
    method kind :
      Js.js_string Js.t Js.readonly_prop
      (** Expects one of:
        - "Decimal"
        - "Not_Applicable" *)
    
    method payload : Js.Unsafe.any Js.t Js.readonly_prop
  end

let decimal_opt_to_jsoo : DecimalOpt.t -> decimal_opt Js.t
  = function
  | Decimal arg -> object%js
      val kind = Js.string "Decimal"
      val payload = Js.Unsafe.coerce (Js.Unsafe.inject (Js.number_of_float @@ decimal_to_float arg))
    end
  | Not_Applicable arg -> object%js
      val kind = Js.string "Not_Applicable"
      val payload = Js.Unsafe.coerce (Js.Unsafe.inject ( arg))
    end

let decimal_opt_of_jsoo (decimal_opt : decimal_opt Js.t) : DecimalOpt.t =
  match decimal_opt##.kind |> Js.to_string with
  | "Decimal" ->
  DecimalOpt.Decimal (decimal_of_float @@ Js.float_of_number (Js.Unsafe.coerce decimal_opt##.payload))
  | "Not_Applicable" -> DecimalOpt.Not_Applicable ()
  | cons ->
    failwith
      (Printf.sprintf
        "Unexpected '%s' kind for the enumeration 'DecimalOpt.t'" cons)


class type d_u_i__fine =
  object
    method min: Js.number Js.t Js.readonly_prop
    method max: Js.number Js.t Js.readonly_prop
  end
  let d_u_i__fine_to_jsoo (d_u_i__fine : DUIFine.t) : d_u_i__fine Js.t =
    object%js
      val min = Js.number_of_float @@ money_to_float d_u_i__fine.min
      val max = Js.number_of_float @@ money_to_float d_u_i__fine.max
      end
  let d_u_i__fine_of_jsoo (d_u_i__fine : d_u_i__fine Js.t) : DUIFine.t =
    {
      min =
        money_of_decimal @@ decimal_of_float @@ Js.float_of_number
          d_u_i__fine##.min;
      max =
        money_of_decimal @@ decimal_of_float @@ Js.float_of_number
          d_u_i__fine##.max
    }

class type d_u_i_out =
  object
    method fineByRecordOut: d_u_i__fine Js.t Js.readonly_prop
    method fineByDamageOut: d_u_i__fine Js.t Js.readonly_prop
  end
  let d_u_i_out_to_jsoo (d_u_i_out : DUIOut.t) : d_u_i_out Js.t =
    object%js
      val fineByRecordOut = d_u_i__fine_to_jsoo d_u_i_out.fine_by_record_out
      val fineByDamageOut = d_u_i__fine_to_jsoo d_u_i_out.fine_by_damage_out
      end
  let d_u_i_out_of_jsoo (d_u_i_out : d_u_i_out Js.t) : DUIOut.t =
    {
      fine_by_record_out = d_u_i__fine_of_jsoo d_u_i_out##.fineByRecordOut;
      fine_by_damage_out = d_u_i__fine_of_jsoo d_u_i_out##.fineByDamageOut
    }

class type d_u_i_in =
  object
    method dateOfTheCurrentDUIOffenseIn: Js.js_string Js.t Js.readonly_prop
    method isDrivingOrInActualPhysicalControlOfAVehicleWithinThisStateIn:
      bool Js.t Js.readonly_prop
    method isSoInfluencedThatTheNormalFacultiesAreImpairedIn:
      bool Js.t Js.readonly_prop
    method bloodAlcoholLevelIn: decimal_opt Js.t Js.readonly_prop
    method breathAlcoholLevelIn: decimal_opt Js.t Js.readonly_prop
    method countOfPreviousDUIConvictionsIn: int Js.readonly_prop
    method dateOfTheMostRecentPriorDUIConvictionIn:
      date_opt Js.t Js.readonly_prop
    method thePersonOperatesAVehcleIn: bool Js.t Js.readonly_prop
    method causesOrContributesToCausingDamageToThePropertyOfAnotherIn:
      bool Js.t Js.readonly_prop
    method causesOrContributesToCausingDamageToThePersonOfAnotherNotDeathNotSeriousInjuryIn:
      bool Js.t Js.readonly_prop
    method causesOrContributesToCausingSeriousBodilyInjuryToAnotherIn:
      bool Js.t Js.readonly_prop
    method causesOrContributesToCausingTheDeathOfAnyHumanBeingOrUnbornChildIn:
      bool Js.t Js.readonly_prop
    method atTheTimeOfTheCrashThePersonKnewOrShouldHaveKnownTheCrashOccurredIn:
      bool Js.t Js.readonly_prop
    method thePersonFailedToGiveInformationAndRenderAidAsRequiredIn:
      bool Js.t Js.readonly_prop
    method accompaniedInTheVehicleByAPersonUnderTheAgeOf18YearsIn:
      bool Js.t Js.readonly_prop
  end
  let d_u_i_in_to_jsoo (d_u_i_in : DUIIn.t) : d_u_i_in Js.t =
    object%js
      val dateOfTheCurrentDUIOffenseIn =
        date_to_jsoo d_u_i_in.date_of_the_current_DUI_offense_in
      val isDrivingOrInActualPhysicalControlOfAVehicleWithinThisStateIn =
        Js.bool d_u_i_in.is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_in
      val isSoInfluencedThatTheNormalFacultiesAreImpairedIn =
        Js.bool d_u_i_in.is_so_influenced_that_the_normal_faculties_are_impaired_in
      val bloodAlcoholLevelIn =
        decimal_opt_to_jsoo d_u_i_in.blood_alcohol_level_in
      val breathAlcoholLevelIn =
        decimal_opt_to_jsoo d_u_i_in.breath_alcohol_level_in
      val countOfPreviousDUIConvictionsIn =
        integer_to_int d_u_i_in.count_of_previous_DUI_convictions_in
      val dateOfTheMostRecentPriorDUIConvictionIn =
        date_opt_to_jsoo d_u_i_in.date_of_the_most_recent_prior_DUI_conviction_in
      val thePersonOperatesAVehcleIn =
        Js.bool d_u_i_in.the_person_operates_a_vehcle_in
      val causesOrContributesToCausingDamageToThePropertyOfAnotherIn =
        Js.bool d_u_i_in.causes_or_contributes_to_causing_damage_to_the_property_of_another_in
      val causesOrContributesToCausingDamageToThePersonOfAnotherNotDeathNotSeriousInjuryIn =
        Js.bool d_u_i_in.causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_in
      val causesOrContributesToCausingSeriousBodilyInjuryToAnotherIn =
        Js.bool d_u_i_in.causes_or_contributes_to_causing_serious_bodily_injury_to_another_in
      val causesOrContributesToCausingTheDeathOfAnyHumanBeingOrUnbornChildIn =
        Js.bool d_u_i_in.causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_in
      val atTheTimeOfTheCrashThePersonKnewOrShouldHaveKnownTheCrashOccurredIn =
        Js.bool d_u_i_in.at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_in
      val thePersonFailedToGiveInformationAndRenderAidAsRequiredIn =
        Js.bool d_u_i_in.the_person_failed_to_give_information_and_render_aid_as_required_in
      val accompaniedInTheVehicleByAPersonUnderTheAgeOf18YearsIn =
        Js.bool d_u_i_in.accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_in
      end
  let d_u_i_in_of_jsoo (d_u_i_in : d_u_i_in Js.t) : DUIIn.t =
    {
      date_of_the_current_DUI_offense_in =
        date_of_jsoo d_u_i_in##.dateOfTheCurrentDUIOffenseIn;
      is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_in =
        Js.to_bool
          d_u_i_in
          ##.isDrivingOrInActualPhysicalControlOfAVehicleWithinThisStateIn;
      is_so_influenced_that_the_normal_faculties_are_impaired_in =
        Js.to_bool
          d_u_i_in##.isSoInfluencedThatTheNormalFacultiesAreImpairedIn;
      blood_alcohol_level_in =
        decimal_opt_of_jsoo d_u_i_in##.bloodAlcoholLevelIn;
      breath_alcohol_level_in =
        decimal_opt_of_jsoo d_u_i_in##.breathAlcoholLevelIn;
      count_of_previous_DUI_convictions_in =
        integer_of_int d_u_i_in##.countOfPreviousDUIConvictionsIn;
      date_of_the_most_recent_prior_DUI_conviction_in =
        date_opt_of_jsoo d_u_i_in##.dateOfTheMostRecentPriorDUIConvictionIn;
      the_person_operates_a_vehcle_in =
        Js.to_bool d_u_i_in##.thePersonOperatesAVehcleIn;
      causes_or_contributes_to_causing_damage_to_the_property_of_another_in =
        Js.to_bool
          d_u_i_in
          ##.causesOrContributesToCausingDamageToThePropertyOfAnotherIn;
      causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_in =
        Js.to_bool
          d_u_i_in
          ##.causesOrContributesToCausingDamageToThePersonOfAnotherNotDeathNotSeriousInjuryIn;
      causes_or_contributes_to_causing_serious_bodily_injury_to_another_in =
        Js.to_bool
          d_u_i_in
          ##.causesOrContributesToCausingSeriousBodilyInjuryToAnotherIn;
      causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_in =
        Js.to_bool
          d_u_i_in
          ##.causesOrContributesToCausingTheDeathOfAnyHumanBeingOrUnbornChildIn;
      at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_in =
        Js.to_bool
          d_u_i_in
          ##.atTheTimeOfTheCrashThePersonKnewOrShouldHaveKnownTheCrashOccurredIn;
      the_person_failed_to_give_information_and_render_aid_as_required_in =
        Js.to_bool
          d_u_i_in##.thePersonFailedToGiveInformationAndRenderAidAsRequiredIn;
      accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_in =
        Js.to_bool
          d_u_i_in##.accompaniedInTheVehicleByAPersonUnderTheAgeOf18YearsIn
    }




let d_u_i (d_u_i_in : d_u_i_in Js.t)
  : d_u_i_out Js.t =
  d_u_i_in |> d_u_i_in_of_jsoo |> d_u_i |> d_u_i_out_to_jsoo


let _ =
   Js.export "FloridaLib"
    (object%js
      
      method dUI : (d_u_i_in Js.t -> d_u_i_out Js.t) Js.callback =
        Js.wrap_callback d_u_i
      
    end)