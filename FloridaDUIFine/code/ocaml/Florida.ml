(** This file has been generated by the Catala compiler, do not edit! *)

open Runtime_ocaml.Runtime

[@@@ocaml.warning "-4-26-27-32-41-42"]

module DateOpt = struct
 type t =
    | Date of date
    | Not_Applicable of unit
  end
let embed_date_opt (x: DateOpt.t) : runtime_value =
  Enum(["Date_opt"],
  match x with
    | Date x -> ("Date", embed_date x)
    | Not_Applicable x -> ("Not_Applicable", embed_unit x))


module DecimalOpt = struct
 type t =
    | Decimal of decimal
    | Not_Applicable of unit
  end
let embed_decimal_opt (x: DecimalOpt.t) : runtime_value =
  Enum(["Decimal_opt"],
  match x with
    | Decimal x -> ("Decimal", embed_decimal x)
    | Not_Applicable x -> ("Not_Applicable", embed_unit x))


module DUIFine = struct
  type t = {min: money; max: money}
end
let embed_d_u_i__fine (x: DUIFine.t) : runtime_value = Struct(["DUI_Fine"],
  [("min", embed_money x.DUIFine.min);
    ("max", embed_money x.DUIFine.max)])


module DUIOut = struct
  type t = {fine_by_record_out: DUIFine.t; fine_by_damage_out: DUIFine.t}
end
let embed_d_u_i_out (x: DUIOut.t) : runtime_value = Struct(["DUI_out"],
  [("fine_by_record_out", embed_d_u_i__fine
    x.DUIOut.fine_by_record_out);
    ("fine_by_damage_out", embed_d_u_i__fine x.DUIOut.fine_by_damage_out)])


module DUIIn = struct
  type t = {
    date_of_the_current_DUI_offense_in: date;
    is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_in:
      bool;
    is_so_influenced_that_the_normal_faculties_are_impaired_in: bool;
    blood_alcohol_level_in: DecimalOpt.t;
    breath_alcohol_level_in: DecimalOpt.t;
    count_of_previous_DUI_convictions_in: integer;
    date_of_the_most_recent_prior_DUI_conviction_in: DateOpt.t;
    the_person_operates_a_vehcle_in: bool;
    causes_or_contributes_to_causing_damage_to_the_property_of_another_in:
      bool;
    causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_in:
      bool;
    causes_or_contributes_to_causing_serious_bodily_injury_to_another_in:
      bool;
    causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_in:
      bool;
    at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_in:
      bool;
    the_person_failed_to_give_information_and_render_aid_as_required_in: bool;
    accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_in: bool
  }
end
let embed_d_u_i_in (x: DUIIn.t) : runtime_value = Struct(["DUI_in"],
  [("date_of_the_current_DUI_offense_in", embed_date
    x.DUIIn.date_of_the_current_DUI_offense_in);
    ("is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_in",
    embed_bool
    x.DUIIn.is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_in);
    ("is_so_influenced_that_the_normal_faculties_are_impaired_in", embed_bool
    x.DUIIn.is_so_influenced_that_the_normal_faculties_are_impaired_in);
    ("blood_alcohol_level_in", embed_decimal_opt
    x.DUIIn.blood_alcohol_level_in);
    ("breath_alcohol_level_in", embed_decimal_opt
    x.DUIIn.breath_alcohol_level_in);
    ("count_of_previous_DUI_convictions_in", embed_integer
    x.DUIIn.count_of_previous_DUI_convictions_in);
    ("date_of_the_most_recent_prior_DUI_conviction_in", embed_date_opt
    x.DUIIn.date_of_the_most_recent_prior_DUI_conviction_in);
    ("the_person_operates_a_vehcle_in", embed_bool
    x.DUIIn.the_person_operates_a_vehcle_in);
    ("causes_or_contributes_to_causing_damage_to_the_property_of_another_in",
    embed_bool
    x.DUIIn.causes_or_contributes_to_causing_damage_to_the_property_of_another_in);
    ("causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_in",
    embed_bool
    x.DUIIn.causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_in);
    ("causes_or_contributes_to_causing_serious_bodily_injury_to_another_in",
    embed_bool
    x.DUIIn.causes_or_contributes_to_causing_serious_bodily_injury_to_another_in);
    ("causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_in",
    embed_bool
    x.DUIIn.causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_in);
    ("at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_in",
    embed_bool
    x.DUIIn.at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_in);
    ("the_person_failed_to_give_information_and_render_aid_as_required_in",
    embed_bool
    x.DUIIn.the_person_failed_to_give_information_and_render_aid_as_required_in);
    ("accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_in",
    embed_bool
    x.DUIIn.accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_in)])




let d_u_i (d_u_i_in: DUIIn.t) : DUIOut.t =
  let date_of_the_current__d_u_i_offense_: date = d_u_i_in.DUIIn.date_of_the_current_DUI_offense_in in
  let is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_: bool = d_u_i_in.DUIIn.is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_in in
  let is_so_influenced_that_the_normal_faculties_are_impaired_: bool = d_u_i_in.DUIIn.is_so_influenced_that_the_normal_faculties_are_impaired_in in
  let blood_alcohol_level_: DecimalOpt.t = d_u_i_in.DUIIn.blood_alcohol_level_in in
  let breath_alcohol_level_: DecimalOpt.t = d_u_i_in.DUIIn.breath_alcohol_level_in in
  let count_of_previous__d_u_i_convictions_: integer = d_u_i_in.DUIIn.count_of_previous_DUI_convictions_in in
  let date_of_the_most_recent_prior__d_u_i_conviction_: DateOpt.t = d_u_i_in.DUIIn.date_of_the_most_recent_prior_DUI_conviction_in in
  let the_person_operates_a_vehcle_: bool = d_u_i_in.DUIIn.the_person_operates_a_vehcle_in in
  let causes_or_contributes_to_causing_damage_to_the_property_of_another_: bool = d_u_i_in.DUIIn.causes_or_contributes_to_causing_damage_to_the_property_of_another_in in
  let causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_: bool = d_u_i_in.DUIIn.causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_in in
  let causes_or_contributes_to_causing_serious_bodily_injury_to_another_: bool = d_u_i_in.DUIIn.causes_or_contributes_to_causing_serious_bodily_injury_to_another_in in
  let causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_: bool = d_u_i_in.DUIIn.causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_in in
  let at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_: bool = d_u_i_in.DUIIn.at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_in in
  let the_person_failed_to_give_information_and_render_aid_as_required_: bool = d_u_i_in.DUIIn.the_person_failed_to_give_information_and_render_aid_as_required_in in
  let accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_: bool = d_u_i_in.DUIIn.accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_in in
  let a_blood_alcohol_level_of_dot15_or_more_grams_per_100_milliliters_of_blood_: bool = (log_variable_definition
    ["DUI";
      "a_blood_alcohol_level_of_dot15_or_more_grams_per_100_milliliters_of_blood"]
    (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=36;
           start_column=12; end_line=36; end_column=85; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=36;
                   start_column=12; end_line=36; end_column=85;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=72;
                      start_column=24; end_line=72; end_column=89;
                      law_headings=[]}
                    (match blood_alcohol_level_
                     with
                     | DecimalOpt.Decimal bac_ ->
                         (bac_ >=& (decimal_of_string "0.15"))
                     | DecimalOpt.Not_Applicable _ -> false)))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=36;
              start_column=12; end_line=36; end_column=85; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=36;
        start_column=12; end_line=36; end_column=85; law_headings=[]})))) in
  let a_blood_alcohol_level_of_dot08_or_more_grams_per_100_milliliters_of_blood_: bool = (log_variable_definition
    ["DUI";
      "a_blood_alcohol_level_of_dot08_or_more_grams_per_100_milliliters_of_blood"]
    (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=34;
           start_column=12; end_line=34; end_column=85; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=34;
                   start_column=12; end_line=34; end_column=85;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=66;
                      start_column=24; end_line=66; end_column=89;
                      law_headings=[]}
                    (match blood_alcohol_level_
                     with
                     | DecimalOpt.Decimal bac_ ->
                         (bac_ >=& (decimal_of_string "0.08"))
                     | DecimalOpt.Not_Applicable _ -> false)))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=34;
              start_column=12; end_line=34; end_column=85; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=34;
        start_column=12; end_line=34; end_column=85; law_headings=[]})))) in
  let a_breath_alcohol_level_of_dot15_or_more_grams_per_210_liters_of_breath_: bool = (log_variable_definition
    ["DUI";
      "a_breath_alcohol_level_of_dot15_or_more_grams_per_210_liters_of_breath"]
    (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=37;
           start_column=12; end_line=37; end_column=82; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=37;
                   start_column=12; end_line=37; end_column=82;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=75;
                      start_column=24; end_line=75; end_column=89;
                      law_headings=[]}
                    (match breath_alcohol_level_
                     with
                     | DecimalOpt.Decimal bac_ ->
                         (bac_ >=& (decimal_of_string "0.15"))
                     | DecimalOpt.Not_Applicable _ -> false)))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=37;
              start_column=12; end_line=37; end_column=82; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=37;
        start_column=12; end_line=37; end_column=82; law_headings=[]})))) in
  let a_breath_alcohol_level_of_dot08_or_more_grams_per_210_liters_of_breath_: bool = (log_variable_definition
    ["DUI";
      "a_breath_alcohol_level_of_dot08_or_more_grams_per_210_liters_of_breath"]
    (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=35;
           start_column=12; end_line=35; end_column=82; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=35;
                   start_column=12; end_line=35; end_column=82;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=69;
                      start_column=24; end_line=69; end_column=89;
                      law_headings=[]}
                    (match breath_alcohol_level_
                     with
                     | DecimalOpt.Decimal bac_ ->
                         (bac_ >=& (decimal_of_string "0.08"))
                     | DecimalOpt.Not_Applicable _ -> false)))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=35;
              start_column=12; end_line=35; end_column=82; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=35;
        start_column=12; end_line=35; end_column=82; law_headings=[]})))) in
  let fourth_or_subsequent_conviction_: bool = (log_variable_definition
    ["DUI"; "fourth_or_subsequent_conviction"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=31;
           start_column=12; end_line=31; end_column=43; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=31;
                   start_column=12; end_line=31; end_column=43;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=51;
                      start_column=56; end_line=51; end_column=94;
                      law_headings=[]}
                    (count_of_previous__d_u_i_convictions_ >=!
                       (integer_of_string "3")))) (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=31;
              start_column=12; end_line=31; end_column=43; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=31;
        start_column=12; end_line=31; end_column=43; law_headings=[]})))) in
  let third_conviction_: bool = (log_variable_definition
    ["DUI"; "third_conviction"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=30;
           start_column=12; end_line=30; end_column=28; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=30;
                   start_column=12; end_line=30; end_column=28;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=50;
                      start_column=56; end_line=50; end_column=93;
                      law_headings=[]}
                    (count_of_previous__d_u_i_convictions_ =
                       (integer_of_string "2")))) (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=30;
              start_column=12; end_line=30; end_column=28; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=30;
        start_column=12; end_line=30; end_column=28; law_headings=[]})))) in
  let second_conviction_: bool = (log_variable_definition
    ["DUI"; "second_conviction"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=29;
           start_column=12; end_line=29; end_column=29; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=29;
                   start_column=12; end_line=29; end_column=29;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=49;
                      start_column=56; end_line=49; end_column=93;
                      law_headings=[]}
                    (count_of_previous__d_u_i_convictions_ =
                       (integer_of_string "1")))) (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=29;
              start_column=12; end_line=29; end_column=29; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=29;
        start_column=12; end_line=29; end_column=29; law_headings=[]})))) in
  let first_conviction_: bool = (log_variable_definition
    ["DUI"; "first_conviction"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=28;
           start_column=12; end_line=28; end_column=28; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=28;
                   start_column=12; end_line=28; end_column=28;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=48;
                      start_column=56; end_line=48; end_column=93;
                      law_headings=[]}
                    (count_of_previous__d_u_i_convictions_ =
                       (integer_of_string "0")))) (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=28;
              start_column=12; end_line=28; end_column=28; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=28;
        start_column=12; end_line=28; end_column=28; law_headings=[]})))) in
  let the_person_is_in_violation_of_subsection_1_: bool = (log_variable_definition
    ["DUI"; "the_person_is_in_violation_of_subsection_1"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=38;
           start_column=12; end_line=38; end_column=54; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=38;
                   start_column=12; end_line=38; end_column=54;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=87;
                      start_column=8; end_line=90; end_column=79;
                      law_headings=[]}
                    (is_driving_or_in_actual_physical_control_of_a_vehicle_within_this_state_
                       &&
                       (is_so_influenced_that_the_normal_faculties_are_impaired_
                          ||
                          (a_blood_alcohol_level_of_dot08_or_more_grams_per_100_milliliters_of_blood_
                             ||
                             a_breath_alcohol_level_of_dot08_or_more_grams_per_210_liters_of_breath_)))))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=38;
              start_column=12; end_line=38; end_column=54; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=38;
        start_column=12; end_line=38; end_column=54; law_headings=[]})))) in
  let third_offense_outwith_10_years_: bool = (log_variable_definition
    ["DUI"; "third_offense_outwith_10_years"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=33;
           start_column=12; end_line=33; end_column=42; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=33;
                   start_column=12; end_line=33; end_column=42;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=61;
                      start_column=10; end_line=62; end_column=73;
                      law_headings=[]}
                    (third_conviction_ &&
                       (match
                          date_of_the_most_recent_prior__d_u_i_conviction_
                        with
                        | DateOpt.Date date_of_last__d_u_i_ ->
                            ((date_of_the_current__d_u_i_offense_ -@
                                date_of_last__d_u_i_) >^
                               (duration_of_numbers (0) (0) (3650)))
                        | DateOpt.Not_Applicable _ -> false))))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=33;
              start_column=12; end_line=33; end_column=42; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=33;
        start_column=12; end_line=33; end_column=42; law_headings=[]})))) in
  let third_offense_within_10_years_: bool = (log_variable_definition
    ["DUI"; "third_offense_within_10_years"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=32;
           start_column=12; end_line=32; end_column=41; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=32;
                   start_column=12; end_line=32; end_column=41;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=55;
                      start_column=10; end_line=56; end_column=74;
                      law_headings=[]}
                    (third_conviction_ &&
                       (match
                          date_of_the_most_recent_prior__d_u_i_conviction_
                        with
                        | DateOpt.Date date_of_last__d_u_i_ ->
                            ((date_of_the_current__d_u_i_offense_ -@
                                date_of_last__d_u_i_) <=^
                               (duration_of_numbers (0) (0) (3650)))
                        | DateOpt.Not_Applicable _ -> false))))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=32;
              start_column=12; end_line=32; end_column=41; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=32;
        start_column=12; end_line=32; end_column=41; law_headings=[]})))) in
  let the_person_is_in_violation_of_subsection_4_: bool = (log_variable_definition
    ["DUI"; "the_person_is_in_violation_of_subsection_4"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=42;
           start_column=12; end_line=42; end_column=54; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=42;
                   start_column=12; end_line=42; end_column=54;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=193;
                      start_column=21; end_line=196; end_column=87;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       (a_blood_alcohol_level_of_dot15_or_more_grams_per_100_milliliters_of_blood_
                          ||
                          (a_breath_alcohol_level_of_dot15_or_more_grams_per_210_liters_of_breath_
                             ||
                             accompanied_in_the_vehicle_by_a_person_under_the_age_of_18_years_)))))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=42;
              start_column=12; end_line=42; end_column=54; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=42;
        start_column=12; end_line=42; end_column=54; law_headings=[]})))) in
  let the_person_is_convicted_of__d_u_i_manslaughter_: bool = (log_variable_definition
    ["DUI"; "the_person_is_convicted_of_DUI_manslaughter"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=41;
           start_column=12; end_line=41; end_column=55; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=41;
                   start_column=12; end_line=41; end_column=55;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=166;
                      start_column=68; end_line=167; end_column=118;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       (the_person_operates_a_vehcle_ &&
                          causes_or_contributes_to_causing_the_death_of_any_human_being_or_unborn_child_))))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=41;
              start_column=12; end_line=41; end_column=55; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=41;
        start_column=12; end_line=41; end_column=55; law_headings=[]})))) in
  let dui_with_serious_bodily_injury_: bool = (log_variable_definition
    ["DUI"; "dui_with_serious_bodily_injury"] (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=40;
           start_column=12; end_line=40; end_column=42; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=40;
                   start_column=12; end_line=40; end_column=42;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=155;
                      start_column=8; end_line=156; end_column=73;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       (the_person_operates_a_vehcle_ &&
                          causes_or_contributes_to_causing_serious_bodily_injury_to_another_))))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=40;
              start_column=12; end_line=40; end_column=42; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=40;
        start_column=12; end_line=40; end_column=42; law_headings=[]})))) in
  let dui_with_damage_to_person_or_property_not_death_not_serious_injury_: bool = (log_variable_definition
    ["DUI";
      "dui_with_damage_to_person_or_property_not_death_not_serious_injury"]
    (embed_bool) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=39;
           start_column=12; end_line=39; end_column=78; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=39;
                   start_column=12; end_line=39; end_column=78;
                   law_headings=[]} ([||])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=142;
                      start_column=8; end_line=144; end_column=102;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       (the_person_operates_a_vehcle_ &&
                          (causes_or_contributes_to_causing_damage_to_the_property_of_another_
                             ||
                             causes_or_contributes_to_causing_damage_to_the_person_of_another_not_death_not_serious_injury_)))))
                 (fun (_: _) -> true))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=39;
              start_column=12; end_line=39; end_column=78; law_headings=
              []} true)) (fun (_: _) -> false))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=39;
        start_column=12; end_line=39; end_column=78; law_headings=[]})))) in
  let fine_by_record_: DUIFine.t = (log_variable_definition
    ["DUI"; "fine_by_record"] (embed_d_u_i__fine) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=43;
           start_column=12; end_line=43; end_column=26; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=43;
                   start_column=12; end_line=43; end_column=26;
                   law_headings=[]}
                 ([|(fun (_: _) ->
                       handle_default
                         {filename = "Florida_DUI_2022.catala_en";
                           start_line=43; start_column=12;
                           end_line=43; end_column=26; law_headings=[]}
                         ([||])
                         (fun (_: _) -> (log_decision_taken
                            {filename = "Florida_DUI_2022.catala_en";
                              start_line=226; start_column=22;
                              end_line=226; end_column=100; law_headings=
                              []}
                            (the_person_is_in_violation_of_subsection_4_ &&
                               fourth_or_subsequent_conviction_)))
                         (fun (_: _) ->
                            {DUIFine.min = (money_of_cents_string "400000");
                               DUIFine.max = (money_of_cents_string "500000")}))|])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=130;
                      start_column=45; end_line=130; end_column=123;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       fourth_or_subsequent_conviction_)))
                 (fun (_: _) ->
                    {DUIFine.min = (money_of_cents_string "200000");
                       DUIFine.max = (money_of_cents_string "500000")}));
            (fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=43;
                   start_column=12; end_line=43; end_column=26;
                   law_headings=[]}
                 ([|(fun (_: _) ->
                       handle_default
                         {filename = "Florida_DUI_2022.catala_en";
                           start_line=43; start_column=12;
                           end_line=43; end_column=26; law_headings=[]}
                         ([||])
                         (fun (_: _) -> (log_decision_taken
                            {filename = "Florida_DUI_2022.catala_en";
                              start_line=222; start_column=22;
                              end_line=222; end_column=99; law_headings=
                              []}
                            (the_person_is_in_violation_of_subsection_4_ &&
                               third_offense_outwith_10_years_)))
                         (fun (_: _) ->
                            {DUIFine.min = (money_of_cents_string "400000");
                               DUIFine.max = (money_of_cents_string "500000")}))|])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=123;
                      start_column=46; end_line=123; end_column=123;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       third_offense_outwith_10_years_)))
                 (fun (_: _) ->
                    {DUIFine.min = (money_of_cents_string "200000");
                       DUIFine.max = (money_of_cents_string "500000")}));
            (fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=43;
                   start_column=12; end_line=43; end_column=26;
                   law_headings=[]}
                 ([|(fun (_: _) ->
                       handle_default
                         {filename = "Florida_DUI_2022.catala_en";
                           start_line=43; start_column=12;
                           end_line=43; end_column=26; law_headings=[]}
                         ([||])
                         (fun (_: _) -> (log_decision_taken
                            {filename = "Florida_DUI_2022.catala_en";
                              start_line=218; start_column=22;
                              end_line=218; end_column=98; law_headings=
                              []}
                            (the_person_is_in_violation_of_subsection_4_ &&
                               third_offense_within_10_years_)))
                         (fun (_: _) ->
                            {DUIFine.min = (money_of_cents_string "400000");
                               DUIFine.max = (money_of_cents_string "500000")}))|])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=116;
                      start_column=45; end_line=116; end_column=121;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       third_offense_within_10_years_)))
                 (fun (_: _) ->
                    {DUIFine.min = (money_of_cents_string "0");
                       DUIFine.max = (money_of_cents_string "500000")}));
            (fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=43;
                   start_column=12; end_line=43; end_column=26;
                   law_headings=[]}
                 ([|(fun (_: _) ->
                       handle_default
                         {filename = "Florida_DUI_2022.catala_en";
                           start_line=43; start_column=12;
                           end_line=43; end_column=26; law_headings=[]}
                         ([||])
                         (fun (_: _) -> (log_decision_taken
                            {filename = "Florida_DUI_2022.catala_en";
                              start_line=214; start_column=22;
                              end_line=214; end_column=86; law_headings=
                              []}
                            (the_person_is_in_violation_of_subsection_4_ &&
                               second_conviction_)))
                         (fun (_: _) ->
                            {DUIFine.min = (money_of_cents_string "200000");
                               DUIFine.max = (money_of_cents_string "400000")}))|])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=104;
                      start_column=46; end_line=104; end_column=110;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       second_conviction_)))
                 (fun (_: _) ->
                    {DUIFine.min = (money_of_cents_string "100000");
                       DUIFine.max = (money_of_cents_string "200000")}));
            (fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=43;
                   start_column=12; end_line=43; end_column=26;
                   law_headings=[]}
                 ([|(fun (_: _) ->
                       handle_default
                         {filename = "Florida_DUI_2022.catala_en";
                           start_line=43; start_column=12;
                           end_line=43; end_column=26; law_headings=[]}
                         ([||])
                         (fun (_: _) -> (log_decision_taken
                            {filename = "Florida_DUI_2022.catala_en";
                              start_line=210; start_column=22;
                              end_line=210; end_column=85; law_headings=
                              []}
                            (the_person_is_in_violation_of_subsection_4_ &&
                               first_conviction_)))
                         (fun (_: _) ->
                            {DUIFine.min = (money_of_cents_string "100000");
                               DUIFine.max = (money_of_cents_string "200000")}))|])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=100;
                      start_column=46; end_line=100; end_column=109;
                      law_headings=[]}
                    (the_person_is_in_violation_of_subsection_1_ &&
                       first_conviction_)))
                 (fun (_: _) ->
                    {DUIFine.min = (money_of_cents_string "50000");
                       DUIFine.max = (money_of_cents_string "100000")}))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=77;
              start_column=46; end_line=77; end_column=60; law_headings=
              []} true))
         (fun (_: _) ->
            {DUIFine.min = (money_of_cents_string "0");
               DUIFine.max = (money_of_cents_string "0")}))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=43;
        start_column=12; end_line=43; end_column=26; law_headings=[]})))) in
  let fine_by_damage_: DUIFine.t = (log_variable_definition
    ["DUI"; "fine_by_damage"] (embed_d_u_i__fine) (
    try
      (handle_default
         {filename = "Florida_DUI_2022.catala_en"; start_line=44;
           start_column=12; end_line=44; end_column=26; law_headings=
           []}
         ([|(fun (_: _) ->
               handle_default
                 {filename = "Florida_DUI_2022.catala_en"; start_line=44;
                   start_column=12; end_line=44; end_column=26;
                   law_headings=[]}
                 ([|(fun (_: _) ->
                       handle_default
                         {filename = "Florida_DUI_2022.catala_en";
                           start_line=44; start_column=12;
                           end_line=44; end_column=26; law_headings=[]}
                         ([|(fun (_: _) ->
                               handle_default
                                 {filename = "Florida_DUI_2022.catala_en";
                                   start_line=44; start_column=12;
                                   end_line=44; end_column=26;
                                   law_headings=[]}
                                 ([|(fun (_: _) ->
                                       handle_default
                                         {filename = "Florida_DUI_2022.catala_en";
                                           start_line=44; start_column=12;
                                           end_line=44; end_column=26;
                                           law_headings=[]} ([||])
                                         (fun (_: _) -> (log_decision_taken
                                            {filename = "Florida_DUI_2022.catala_en";
                                              start_line=183;
                                              start_column=19;
                                              end_line=185; end_column=85;
                                              law_headings=[]}
                                            (the_person_is_convicted_of__d_u_i_manslaughter_
                                               &&
                                               (at_the_time_of_the_crash_the_person_knew_or_should_have_known_the_crash_occurred_
                                                  &&
                                                  the_person_failed_to_give_information_and_render_aid_as_required_))))
                                         (fun (_: _) ->
                                            {DUIFine.min =
                                               (money_of_cents_string "0");
                                               DUIFine.max =
                                                 (money_of_cents_string
                                                 "1000000")}))|])
                                 (fun (_: _) -> (log_decision_taken
                                    {filename = "Florida_DUI_2022.catala_en";
                                      start_line=174; start_column=19;
                                      end_line=174; end_column=62;
                                      law_headings=[]}
                                    the_person_is_convicted_of__d_u_i_manslaughter_))
                                 (fun (_: _) ->
                                    {DUIFine.min = (money_of_cents_string
                                       "0");
                                       DUIFine.max = (money_of_cents_string
                                         "1000000")}))|])
                         (fun (_: _) -> (log_decision_taken
                            {filename = "Florida_DUI_2022.catala_en";
                              start_line=160; start_column=19;
                              end_line=160; end_column=49; law_headings=
                              []} dui_with_serious_bodily_injury_))
                         (fun (_: _) ->
                            {DUIFine.min = (money_of_cents_string "0");
                               DUIFine.max = (money_of_cents_string "500000")}))|])
                 (fun (_: _) -> (log_decision_taken
                    {filename = "Florida_DUI_2022.catala_en"; start_line=148;
                      start_column=19; end_line=148; end_column=85;
                      law_headings=[]}
                    dui_with_damage_to_person_or_property_not_death_not_serious_injury_))
                 (fun (_: _) ->
                    {DUIFine.min = (money_of_cents_string "0");
                       DUIFine.max = (money_of_cents_string "100000")}))|])
         (fun (_: _) -> (log_decision_taken
            {filename = "Florida_DUI_2022.catala_en"; start_line=78;
              start_column=46; end_line=78; end_column=60; law_headings=
              []} true))
         (fun (_: _) ->
            {DUIFine.min = (money_of_cents_string "0");
               DUIFine.max = (money_of_cents_string "0")}))
    with
    EmptyError -> (raise (NoValueProvided
      {filename = "Florida_DUI_2022.catala_en"; start_line=44;
        start_column=12; end_line=44; end_column=26; law_headings=[]})))) in
  {DUIOut.fine_by_record_out = fine_by_record_;
     DUIOut.fine_by_damage_out = fine_by_damage_}
